---
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  IngestionWorkFlowArn:
    Type: String
  Environment:
    Type: String
    Default: "dev"
  CTASQuery:
    Type: String
    Description: "CTAS query to be executed"
    Default: ""
  OutputLocation:
    Type: String
    Description: "Location of generated data"
    Default: ""
  EventbusName:
    Type: String
    Description: "Eventbus Name"
    Default: ""
  KmsArn:
    Type: String
    Description: "Kms Arn key"
    Default: ""

Outputs:
  StepFunctionsArn:
    Value: !GetAtt AthenaWorkflow.Arn

Resources:
  AthenaWorkflowTrigger:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref EventbusName
      Name: !Sub ${Environment}-AthenaWorkflowTrigger
      State: ENABLED
      EventPattern: !Sub |
        {
          "source": [
            "datalake.ingestion"
          ],
          "detail-type": [
            "ingestion-SUCCEED"
          ]
        }
      Targets:
        - Arn: !GetAtt AthenaWorkflow.Arn
          Id: !GetAtt AthenaWorkflow.Name
          RoleArn: !GetAtt AthenaWorkflowTriggerRole.Arn
  AthenaWorkflow:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      StateMachineName: !Sub "${Environment}-athena-workflow"
      DefinitionString: |
        {
          "Comment": "Step Functions which call CTAS athena query",
          "StartAt": "CTAS Athena query",
          "States": {
            "CTAS Athena query": {
              "Type": "Task",
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "${CTASQuery}",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                   "OutputLocation": "${OutputLocation}"
                }
              },
              "Next": "Processus End"
            },
            "Processus End": {
                "Type": "Pass",
                "End": true
            }
          }
        }
      DefinitionSubstitutions:
        CTASQuery: !Sub "${CTASQuery}"
        OutputLocation: !Sub "s3://${OutputLocation}/"
      RoleArn: !GetAtt StepFunctionsRole.Arn

  AthenaWorkflowTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Environment}-athena-workflow-trigger"
      Path: "/"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub "states.${AWS::Region}.amazonaws.com"
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: EventTriggerStepFunction
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "states:StartExecution"
                Resource: !GetAtt AthenaWorkflow.Arn
  StepFunctionsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Environment}-athena-workflow-step-functions"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonAthenaFullAccess'
      Policies:
        - PolicyName: KMS
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowKMS
                Effect: Allow
                Action:
                  - "kms:Encrypt"
                  - "kms:Decrypt"
                  - "kms:GenerateDataKey*"
                Resource: !Ref KmsArn
        - PolicyName: S3-Athena-Query-Result-Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:Put*'
                  - 's3:Get*'
                  - 's3:List*'
                  - 's3:DeleteObject*'
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Sub ${OutputLocation}
                      - '/*'